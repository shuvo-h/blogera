custom font load
- download the fonts into src/assets
- react-native.config.ts    // create this at root and include the asset dir
>> npx react-native-asset   // collect static asset after config the fonts
- style={{fontFamily:"Poppins-Light"}}      // use in style 


*** Router/Navigation Screen********
>> npm install @react-navigation/native @react-navigation/native-stack
- Wrap whole app by <NavigationContainer />




***********Builds APK*************
>> ./android/.gradlew clean             // to clean any previous cache















How to generate keytook for APK
Step 1: Generate the Keystore
>> keytool -genkeypair -v -keystore /home/your_path/your_app_key.keystore -keyalg RSA -keysize 2048 -validity 10000 -alias your_app_key_alias -storepass my-keystore-password -keypass my-key-password

>> keytool -genkeypair -v -keystore /home/shuvoserver/Documents/djects/android_dev/keystro_keys/buddhst_app_key.keystore -keyalg RSA -keysize 2048 -validity 10000 -alias buddhist_app_key_alias -storepass my-keystore-password -keypass my-key-password                      
 
"""
    Explanation of options:
    -keystore /path/to/your/keystore: Path where the keystore will be stored.
    -keyalg RSA: The algorithm for the key (RSA is a common choice).
    -keysize 2048: The size of the key (2048 bits is standard).
    -validity 10000: The validity period for the key in days (10,000 days is roughly 27 years).
    -alias your-key-alias: An alias for the key (choose a name to identify the key, like my-release-key).
"""

Step 2: Enter Keystore Information
    After running the command, you will be prompted to enter various details, such as:

    Keystore password
    - Your name and organization details
    - The password for the key alias
    - Keep the password and alias secure, as youâ€™ll need them later for signing the app.

Step 3: Configure React Native to Use the Keystore(update Gradle variables)
    - Place the my_app_v_01.keystore file under the "android/app" directory
    - make sure this file is not going to git, check gitignore
    - Create or edit the ~/.gradle/gradle.properties 
        ~
            MYAPP_UPLOAD_STORE_FILE=/path/my-upload-key.keystore
            MYAPP_UPLOAD_KEY_ALIAS=my-key-alias
            MYAPP_UPLOAD_STORE_PASSWORD=*****
            MYAPP_UPLOAD_KEY_PASSWORD=*****
        ~


Step 4: Update the android/app/build.gradle file

    ~
        android {
            signingConfigs {
                release {
                    if (project.hasProperty("MY_RELEASE_STORE_FILE")) {
                        storeFile file(MY_RELEASE_STORE_FILE)
                        storePassword MY_RELEASE_STORE_PASSWORD
                        keyAlias MY_RELEASE_KEY_ALIAS
                        keyPassword MY_RELEASE_KEY_PASSWORD
                    }
                }
            }
            buildTypes {
                release {
                    signingConfig signingConfigs.release
                    minifyEnabled enableProguardInReleaseBuilds
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
            }
        }
    ~


Step 5: Build Your Release APK
>> npx react-native doctor
>> ./android/gradlew assembleRelease            // build apk for production

>> npx react-native build-android --mode=release










keytool -genkeypair -v -keystore /home/shuvoserver/Documents/djects/android_dev/keystro_keys/buddhst_app_key.keystore -keyalg RSA -keysize 2048 -validity 10000 -alias buddhist_app_key_alias